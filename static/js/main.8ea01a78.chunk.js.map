{"version":3,"sources":["Loading.js","Quote.js","App.js","reportWebVitals.js","index.js"],"names":["Loading","className","role","Quote","content","author","tags","generateRandomQuote","title","type","onClick","QOUTE_API","App","props","setState","loading","axios","get","then","res","data","catch","err","console","log","state","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAgBeA,EAdC,WACZ,OACI,qBAAKC,UAAU,iBAAf,SACI,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,iBAAf,SACI,qBAAKA,UAAU,iBAAiBC,KAAK,SAArC,SACI,sBAAMD,UAAU,WAAhB,iCCWTE,EAjBD,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,QAASC,EAAuC,EAAvCA,OAAQC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,oBACpC,OACI,qBAAKN,UAAU,iBAAf,SACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,kEAAf,UACE,6BAAYA,UAAU,cAAtB,UACE,sBAAMA,UAAU,wBAAhB,SAAyCK,EAAK,KAC9C,oBAAGL,UAAU,OAAb,cAAsBG,EAAtB,OACA,wBAAQH,UAAU,oBAAlB,SAAsC,sBAAMO,MAAM,eAAZ,SAA4BH,SAEpE,wBAAQI,KAAK,cAAcC,QAASH,EAAqBN,UAAU,mBAAnE,4BCRRU,EAAY,iCA+BHC,EA7Bf,kDAEE,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAWRN,oBAAsB,WACpB,EAAKO,SAAS,CAAEC,SAAS,IACzBC,IAAMC,IAAIN,GAAWO,MAAK,SAACC,GAAS,IAAD,EACCA,EAAIC,KAA9Bf,EADyB,EACzBA,OAAQD,EADiB,EACjBA,QAASE,EADQ,EACRA,KACzB,EAAKQ,SAAS,CAAET,SAAQD,UAASE,OAAMS,SAAS,OAC/CM,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,OAf9B,EAAKG,MAAQ,CAAEpB,OAAQ,GAAID,QAAS,GAAIE,KAAM,GAAIS,SAAS,GAF1C,EAFrB,qDAOE,WAAqB,IAAD,OAClBC,IAAMC,IAAIN,GAAWO,MAAK,SAACC,GAAS,IAAD,EACCA,EAAIC,KAA9Bf,EADyB,EACzBA,OAAQD,EADiB,EACjBA,QAASE,EADQ,EACRA,KACzB,EAAKQ,SAAS,CAAET,SAAQD,UAASE,OAAMS,SAAS,OAC/CM,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,QAXlC,oBAqBE,WAAU,IAAD,EACoCI,KAAKD,MAAxCpB,EADD,EACCA,OAAQD,EADT,EACSA,QAASE,EADlB,EACkBA,KACzB,OAFO,EACwBS,QACX,cAAC,EAAD,IACb,cAAC,EAAD,CAAOV,OAAQA,EAAQD,QAASA,EAASE,KAAMA,EACxCC,oBAAqBmB,KAAKnB,0BAzB5C,GAAyBoB,aCMVC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8ea01a78.chunk.js","sourcesContent":["import React from 'react'\n\nconst Loading = () => {\n    return (\n        <div className=\"container mt-5\">\n            <div className=\"row\">\n                <div className=\"col-2 offset-5\">\n                    <div className=\"spinner-border\" role=\"status\">\n                        <span className=\"sr-only \">Loading...</span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Loading\n","import React from 'react'\n\nconst Quote = ({ content, author, tags, generateRandomQuote}) => {\n    return (\n        <div className=\"container mt-5\">\n          <div className=\"row\">\n            <div className=\"col-sm-12 col-lg-8 col-md-8 offset-lg-2 offset-md-2 text-center\">\n              <blockquote className=\"blockquote \">\n                <span className=\"badge badge-secondary\">{tags[0]}</span>\n                <p className=\"mb-0\">\"{content}\"</p>\n                <footer className=\"blockquote-footer\"><cite title=\"Source Title\">{author}</cite></footer>\n              </blockquote>\n              <button type=\"button mt-5\" onClick={generateRandomQuote} className=\"btn btn-primary \">Random</button>\n            </div>\n          </div>\n        </div>\n    )\n}\n\nexport default Quote\n","import React, { Component } from 'react'\nimport axios from 'axios';\nimport Loading from './Loading';\nimport Quote from './Quote';\nconst QOUTE_API = 'https://api.quotable.io/random';\n\nexport class App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { author: \"\", content: \"\", tags: [], loading: true };\n  }\n\n  componentDidMount() {\n    axios.get(QOUTE_API).then((res) => {\n      const { author, content, tags } = res.data;\n      this.setState({ author, content, tags, loading: false })\n    }).catch((err) => console.log(err))\n  }\n\n  generateRandomQuote = () => {\n    this.setState({ loading: true })\n    axios.get(QOUTE_API).then((res) => {\n      const { author, content, tags } = res.data;\n      this.setState({ author, content, tags, loading: false })\n    }).catch((err) => console.log(err))\n  }\n  render() {\n    const { author, content, tags, loading } = this.state;\n    if (loading) return <Loading />\n    return <Quote author={author} content={content} tags={tags}\n                  generateRandomQuote={this.generateRandomQuote} />\n  }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}